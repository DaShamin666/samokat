name: 🌙 Nightly Tests

on:
  schedule:
    # Запуск каждую ночь в 2:00 UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Ручной запуск
    inputs:
      environment:
        description: 'Test environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - stage

env:
  PYTHON_VERSION: '3.12'

jobs:
  nightly-full-suite:
    name: 🌙 Nightly Full Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        environment: [dev, stage]
        
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install playwright pytest pytest-playwright allure-pytest faker
        
    - name: 🎭 Install Playwright browsers and system dependencies
      run: |
        playwright install-deps ${{ matrix.browser }}
        playwright install ${{ matrix.browser }}
        
    - name: 🌙 Run Full Test Suite
      run: |
        python -m pytest --browser=${{ matrix.browser }} --env=${{ matrix.environment }} -v --tb=short --alluredir=allure-results -k "not (test_complete_order_path or test_metro_stations or test_rental_periods or test_first_step_completion or test_multiple_orders or test_predefined_users or test_same_data_different_buttons or test_complete_order_flow or test_fill_order_form_step1_random_user)"
      env:
        BROWSER: ${{ matrix.browser }}
        ENVIRONMENT: ${{ matrix.environment }}
        
    - name: 📊 Upload Allure Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: nightly-allure-results-${{ matrix.browser }}-${{ matrix.environment }}
        path: allure-results/
        retention-days: 30
        
    - name: 📷 Upload Screenshots on Failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: nightly-failed-screenshots-${{ matrix.browser }}-${{ matrix.environment }}
        path: |
          screenshots/
          videos/
        retention-days: 30

  nightly-summary:
    name: 📋 Nightly Test Summary
    runs-on: ubuntu-latest
    needs: nightly-full-suite
    if: always()
    
    steps:
    - name: 📊 Create Nightly Summary
      run: |
        echo "## 🌙 Nightly Test Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Date**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "**Total Test Configurations**: 6 (3 browsers × 2 environments)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Browser Coverage:" >> $GITHUB_STEP_SUMMARY
        echo "- 🟢 Chromium" >> $GITHUB_STEP_SUMMARY
        echo "- 🟠 Firefox" >> $GITHUB_STEP_SUMMARY
        echo "- 🔵 WebKit" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Environment Coverage:" >> $GITHUB_STEP_SUMMARY
        echo "- 🛠️ Development" >> $GITHUB_STEP_SUMMARY
        echo "- 🎭 Staging" >> $GITHUB_STEP_SUMMARY
